// Copyright (C) 2015-2022: The University of Edinburgh, United Kingdom
//                 Authors: Craig Warren, Antonis Giannopoulos, and John Hartley
//
// This file is part of gprMax.
//
// gprMax is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// gprMax is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with gprMax.  If not, see <http://www.gnu.org/licenses/>.


#define IDX2D_RXCOORDS(m,n) (m)*({{NY_RXCOORDS}}) + (n)
#define IDX3D_RXS(i,j,k) (i)*({{NY_RXS}})*({{NZ_RXS}}) + (j)*({{NZ_RXS}}) + (k)
#define IDX3D_FIELDS(i,j,k) (i)*({{NY_FIELDS}})*({{NZ_FIELDS}}) + (j)*({{NZ_FIELDS}}) + (k)

{{KERNEL}} void store_outputs(int NRX, 
                            int iteration,{% filter indent(width=28) %}{% block rx_args %}{% endblock rx_args %}{% endfilter %}{

    // This function stores field component values for every receiver in the model.
    //
    // Args: 
    //    NRX: total number of receivers in the model.
    //    rxs: array to store field components for receivers - rows 
    //          are field components; columns are iterations; pages are receiver

    // Obtain linear index corresponding to the current work item
    {% block threadidx %}{% endblock threadidx %}

    int i,j,k;

    if (rx < NRX) {
        i = rxcoords[IDX2D_RXCOORDS(rx,0)];
        j = rxcoords[IDX2D_RXCOORDS(rx,1)];
        k = rxcoords[IDX2D_RXCOORDS(rx,2)];
        rxs[IDX3D_RXS(0,iteration,rx)] = Ex[IDX3D_FIELDS(i,j,k)];
        rxs[IDX3D_RXS(1,iteration,rx)] = Ey[IDX3D_FIELDS(i,j,k)];
        rxs[IDX3D_RXS(2,iteration,rx)] = Ez[IDX3D_FIELDS(i,j,k)];
        rxs[IDX3D_RXS(3,iteration,rx)] = Hx[IDX3D_FIELDS(i,j,k)];
        rxs[IDX3D_RXS(4,iteration,rx)] = Hy[IDX3D_FIELDS(i,j,k)];
        rxs[IDX3D_RXS(5,iteration,rx)] = Hz[IDX3D_FIELDS(i,j,k)];
    }
}