{% extends "fields_updates_base.tmpl" %}

{% block complex_header %}
#include <pyopencl-complex.h>
{% endblock complex_header %}


{% block constmem %}
__constant {{REAL}} updatecoeffsE[{{N_updatecoeffsE}}] = 
{
    {% for i in updatecoeffsE %}
    {{i}},
    {% endfor %}
};

__constant {{REAL}} updatecoeffsH[{{N_updatecoeffsH}}] = 
{
    {% for i in updatecoeffsH %}
    {{i}},
    {% endfor %}
};
{% endblock constmem %}


{% block threadidx %}
    int idx = get_global_id(2) * get_global_size(0) * get_global_size(1) + 
              get_global_id(1) * get_global_size(0) + get_global_id(0);
{% endblock threadidx %}


{% block electric_args %}
__global const unsigned int* restrict ID, 
__global {{REAL}} *Ex, 
__global {{REAL}} *Ey, 
__global {{REAL}} *Ez, 
__global const {{REAL}} * restrict Hx, 
__global const {{REAL}} * restrict Hy, 
__global const {{REAL}} * restrict Hz) 
{% endblock electric_args %}


{% block magnetic_args %}
__global const unsigned int* restrict ID, 
__global {{REAL}} *Hx, 
__global {{REAL}} *Hy, 
__global {{REAL}} *Hz, 
__global const {{REAL}}* restrict Ex, 
__global const {{REAL}}* restrict Ey, 
__global const {{REAL}}* restrict Ez) 
{% endblock magnetic_args %}


{% block electric_dispersive_A_args %}
__global const {{COMPLEX}}* restrict updatecoeffsdispersive, 
__global {{COMPLEX}} *Tx, 
__global {{COMPLEX}} *Ty, 
__global {{COMPLEX}} *Tz, 
__global const unsigned int* restrict ID, 
__global {{REAL}} *Ex, 
__global {{REAL}} *Ey, 
__global {{REAL}} *Ez, 
__global const {{REAL}}* restrict Hx, 
__global const {{REAL}}* restrict Hy, 
__global const {{REAL}}* restrict Hz)
{% endblock electric_dispersive_A_args %}


{% block electric_dispersive_B_args %}
__global const {{COMPLEX}}* restrict updatecoeffsdispersive, 
__global {{COMPLEX}} *Tx, 
__global {{COMPLEX}} *Ty, 
__global {{COMPLEX}} *Tz, 
__global const unsigned int* restrict ID, 
__global const {{REAL}}* restrict Ex, 
__global const {{REAL}}* restrict Ey, 
__global const {{REAL}}* restrict Ez)
{% endblock electric_dispersive_B_args %}