{% extends "fields_updates_base.tmpl" %}

{% block complex_header %}
#include <pycuda-complex.hpp>
{% endblock complex_header %}


{% block constmem %}
__device__ __constant__ {{REAL}} updatecoeffsE[{{N_updatecoeffsE}}];
__device__ __constant__ {{REAL}} updatecoeffsH[{{N_updatecoeffsH}}];
{% endblock constmem %}


{% block threadidx %}
    int idx = blockIdx.x * blockDim.x + threadIdx.x;
{% endblock threadidx %}


{% block electric_args %}
const unsigned int* __restrict__ ID, 
{{REAL}} *Ex, 
{{REAL}} *Ey, 
{{REAL}} *Ez, 
const {{REAL}}* __restrict__ Hx, 
const {{REAL}}* __restrict__ Hy, 
const {{REAL}}* __restrict__ Hz) 
{% endblock electric_args %}


{% block magnetic_args %}
const unsigned int* __restrict__ ID, 
{{REAL}} *Hx, 
{{REAL}} *Hy, 
{{REAL}} *Hz, 
const {{REAL}}* __restrict__ Ex, 
const {{REAL}}* __restrict__ Ey, 
const {{REAL}}* __restrict__ Ez) 
{% endblock magnetic_args %}


{% block electric_dispersive_A_args %}
const {{COMPLEX}}* __restrict__ updatecoeffsdispersive, 
{{COMPLEX}} *Tx, 
{{COMPLEX}} *Ty, 
{{COMPLEX}} *Tz, 
const unsigned int* __restrict__ ID, 
{{REAL}} *Ex, 
{{REAL}} *Ey, 
{{REAL}} *Ez, 
const {{REAL}}* __restrict__ Hx, 
const {{REAL}}* __restrict__ Hy, 
const {{REAL}}* __restrict__ Hz)
{% endblock electric_dispersive_A_args %}


{% block electric_dispersive_B_args %}
const {{COMPLEX}}* __restrict__ updatecoeffsdispersive, 
{{COMPLEX}} *Tx, 
{{COMPLEX}} *Ty, 
{{COMPLEX}} *Tz, 
const unsigned int* __restrict__ ID, 
const {{REAL}}* __restrict__ Ex, 
const {{REAL}}* __restrict__ Ey, 
const {{REAL}}* __restrict__ Ez)
{% endblock electric_dispersive_B_args %}